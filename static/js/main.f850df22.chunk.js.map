{"version":3,"sources":["joke/JokeRequest.jsx","joke/LoadingSpin.jsx","joke/JokeList.jsx","App.js","reportWebVitals.js","index.js"],"names":["JokeRequest","props","this","jokeVote","className","onClick","upVotes","style","borderColor","downVotes","jokeTitle","getEmoji","Component","LoadingSpin","JokeList","state","jokes","JSON","parse","window","localStorage","getItem","loading","uniqueJoke","Set","map","j","joke","handleClick","bind","length","setState","getRequestJoke","a","numOfJokePerRequest","axios","get","headers","Accept","res","newJoke","data","has","push","id","uuid","votes","st","setItem","stringify","alert","counterVote","jokesOrderByVotes","sort","b","disabled","jokeId","handleVote","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWAgFeA,E,kDA1Eb,WAAYC,GAAO,uCACXA,G,+CAKR,WACE,OAAGC,KAAKD,MAAME,UAAa,GAClB,UACCD,KAAKD,MAAME,UAAY,IAExBD,KAAKD,MAAME,UAAY,EADtB,UAGDD,KAAKD,MAAME,UAAY,EACtB,UACDD,KAAKD,MAAME,UAAY,EACtB,UACDD,KAAKD,MAAME,UAAY,EACtB,UACDD,KAAKD,MAAME,SAAW,EACrB,eADJ,I,sBAMR,WACE,OAAGD,KAAKD,MAAME,UAAa,GAClB,oBACAD,KAAKD,MAAME,UAAY,GACtB,iBACAD,KAAKD,MAAME,UAAY,GACvB,cACDD,KAAKD,MAAME,UAAY,EACtB,aACDD,KAAKD,MAAME,UAAY,EACtB,cACDD,KAAKD,MAAME,UAAY,EACtB,eACDD,KAAKD,MAAME,UAAY,EACtB,8BACDD,KAAKD,MAAME,WAAa,EACvB,sBACDD,KAAKD,MAAME,WAAa,EACvB,+BACDD,KAAKD,MAAME,WAAa,EACvB,kBACDD,KAAKD,MAAME,WAAa,EACvB,2BADJ,I,oBAMR,WACE,OACE,sBAAKC,UAAU,mBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,mBAAGC,QAASH,KAAKD,MAAMK,QAASF,UAAU,oBAC1C,qBAAKA,UAAU,UAAUG,MAAO,CAAEC,YAAaN,KAAKM,eAApD,SAAsEN,KAAKD,MAAME,WACjF,mBAAGE,QAASH,KAAKD,MAAMQ,UAAWL,UAAU,yBAE9C,qBAAKA,UAAU,aAAf,SACGF,KAAKD,MAAMS,YAEd,qBAAKN,UAAU,iBAAf,SACE,mBAAGA,UAAWF,KAAKS,sB,GAlEHC,aCQXC,G,kKATb,WACE,OACE,qBAAKT,UAAU,UAAf,SACE,mBAAGA,UAAU,sB,GAJKQ,cCKpBE,E,kDAKJ,WAAYb,GAAO,IAAD,8BAChB,cAAMA,IACDc,MAAQ,CACXC,MAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,eAAiB,MAC/DC,SAAS,GAGX,EAAKC,WAAa,IAAIC,IAAI,EAAKT,MAAMC,MAAMS,KAAI,SAAAC,GAAC,OAAIA,EAAEC,SACtD,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBARH,E,qDAWlB,WACiC,IAA5B3B,KAAKa,MAAMC,MAAMc,QAAc5B,KAAK0B,gB,yBAGzC,WACE1B,KAAK6B,SAAS,CAACT,SAAS,GAAOpB,KAAK8B,kB,mEAGtC,gCAAAC,EAAA,+DAEQjB,EAAQ,GAFhB,YAGUA,EAAMc,OAAS5B,KAAKD,MAAMiC,qBAHpC,iCAIsBC,IAAMC,IAAI,8BAA+B,CAACC,QAAS,CAACC,OAAQ,sBAJlF,OAIUC,EAJV,OAOUC,EAAUD,EAAIE,KAAKd,KAClBzB,KAAKqB,WAAWmB,IAAIF,IACvBxB,EAAM2B,KAAK,CAACC,GAAGC,MAAQlB,KAAMY,EAAIE,KAAKd,KAAMmB,MAAO,IAT3D,uBAYI5C,KAAK6B,UACH,SAAAgB,GAAE,MAAK,CACLzB,SAAS,EACTN,MAAM,GAAD,mBAAM+B,EAAG/B,OAAUA,OAE5BG,OAAOC,aAAa4B,QAAQ,aAAc/B,KAAKgC,UAAUjC,IAjB7D,kDAmBIkC,MAAM,EAAD,IAnBT,0D,8EAwBA,SAAWN,EAAIO,GAAa,IAAD,OACzBjD,KAAK6B,UACH,SAAAgB,GAAE,MAAK,CACL/B,MAAO+B,EAAG/B,MAAMS,KAAI,SAAAC,GAAC,OAAIA,EAAEkB,KAAOA,EAAT,2BAAkBlB,GAAlB,IAAqBoB,MAAOpB,EAAEoB,MAAQK,IAAezB,SAEhF,kBAAMP,OAAOC,aAAa4B,QAAQ,aAAc/B,KAAKgC,UAAU,EAAKlC,MAAMC,a,oBAI9E,WAAS,IAAD,OAEFoC,EAAoBlD,KAAKa,MAAMC,MAAMqC,MAAK,SAACpB,EAAEqB,GAAH,OAASA,EAAER,MAAQb,EAAEa,SACnE,OACE,sBAAK1C,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,gBAAf,iBAAmC,4CACnC,qBAAKA,UAAU,eAAf,SAA8B,mBAAGA,UAAU,sCAC3C,qBAAKA,UAAU,kBAAf,SACE,wBAAQmD,SAAUrD,KAAKa,MAAMO,QAASjB,QAASH,KAAK0B,YAApD,2BAGJ,sBAAKxB,UAAU,6BAAf,UACGF,KAAKa,MAAMO,SAAW,cAAC,EAAD,IAEtB8B,EAAkB3B,KAAI,SAAAC,GAAC,OACtB,cAAC,EAAD,CACE8B,OAAQ9B,EAAEkB,GACVlC,UAAWgB,EAAEC,KACbxB,SAAUuB,EAAEoB,MACZxC,QAAS,kBAAM,EAAKmD,WAAW/B,EAAEkB,GAAI,IACrCnC,UAAW,kBAAM,EAAKgD,WAAW/B,EAAEkB,IAAK,KALxBlB,EAAEkB,iB,GAzEThC,aAAjBE,EACG4C,aAAe,CACpBxB,oBAAsB,IAsFXpB,Q,MCnFA6C,MARf,WACE,OACE,qBAAKvD,UAAU,MAAf,SACE,cAAC,EAAD,OCKSwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f850df22.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './JokeList.css';\r\n\r\n\r\nclass JokeRequest extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n  }\r\n\r\n  // handle counter border color by votes\r\n  borderColor(){\r\n    if(this.props.jokeVote >=  14) {\r\n      return \"#40ca66\";\r\n    } else if(this.props.jokeVote >= 10){\r\n      return  \"#8defa8\"; \r\n    }else if(this.props.jokeVote >= 7){\r\n      return  \"#8defa8\"; \r\n    }else if(this.props.jokeVote >= 5){\r\n      return  \"#59cca8\"; \r\n    }else if(this.props.jokeVote >= 3){\r\n      return  \"#83d583\"; \r\n    }else if(this.props.jokeVote >= 0){\r\n      return  \"#a9f1db\"; \r\n    }else if(this.props.jokeVote < 0){\r\n      return  \"#e26a6a\"; \r\n    }\r\n  }\r\n\r\n\r\n  getEmoji(){\r\n    if(this.props.jokeVote >=  15) {\r\n      return \"em em-sweat_smile\";\r\n    }else if(this.props.jokeVote >= 12){\r\n      return  \"em em-laughing\"; \r\n    } else if(this.props.jokeVote >= 10){\r\n      return  \"em em-blush\"; \r\n    }else if(this.props.jokeVote >= 7){\r\n      return  \"em em-grin\"; \r\n    }else if(this.props.jokeVote >= 5){\r\n      return  \"em em-smile\"; \r\n    }else if(this.props.jokeVote >= 3){\r\n      return  \"em em-smiley\"; \r\n    }else if(this.props.jokeVote >= 0){\r\n      return  \"em em-slightly_smiling_face\"; \r\n    }else if(this.props.jokeVote <= -6){\r\n      return  \"em em-face_vomiting\"; \r\n    }else if(this.props.jokeVote <= -4){\r\n      return  \"em em-face_with_rolling_eyes\"; \r\n    }else if(this.props.jokeVote <= -2){\r\n      return  \" em em-confused\"; \r\n    }else if(this.props.jokeVote <= -1){\r\n      return  \"em em-neutral_face \"; \r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"JokeList-content\">\r\n        <div className=\"JokeList-control\">\r\n          <i onClick={this.props.upVotes} className=\"fas fa-arrow-up\"></i>\r\n          <div className=\"counter\" style={{ borderColor: this.borderColor() }}>{this.props.jokeVote}</div>\r\n          <i onClick={this.props.downVotes} className=\"fas fa-arrow-down\"></i>\r\n        </div>\r\n        <div className=\"Joke-title\">\r\n          {this.props.jokeTitle}\r\n        </div>\r\n        <div className=\"JokeList-emoji\">\r\n          <i className={this.getEmoji()}></i>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default JokeRequest;","import React, { Component } from 'react';\r\nimport './LoadingSpin.css'\r\nclass LoadingSpin extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"Loading\">\r\n        <i className=\"fas fa-sync\"></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadingSpin;","import React, { Component } from 'react';\r\nimport uuid from 'uuid/dist/v4';\r\nimport axios from 'axios';\r\nimport JokeRequest from './JokeRequest';\r\nimport LoadingSpin from './LoadingSpin';\r\nimport './JokeList.css';\r\n\r\nclass JokeList extends Component{\r\n  static defaultProps = {\r\n    numOfJokePerRequest : 10\r\n  };\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      jokes: JSON.parse(window.localStorage.getItem(\"localJokes\") || \"[]\"),\r\n      loading: false\r\n    };\r\n\r\n    this.uniqueJoke = new Set(this.state.jokes.map(j => j.joke));\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.state.jokes.length === 0) this.handleClick()\r\n  }\r\n\r\n  handleClick(){\r\n    this.setState({loading: true}, this.getRequestJoke);\r\n  }\r\n  // handle Click To Get Request jokes\r\n  async getRequestJoke(){\r\n    try{\r\n      let jokes = [];\r\n      while(jokes.length < this.props.numOfJokePerRequest) {\r\n        let res = await axios.get(\"https://icanhazdadjoke.com/\", {headers: {Accept: \"application/json\"}});\r\n        \r\n        // check if old joke exist before add a new joke\r\n        let newJoke = res.data.joke;\r\n        if(! this.uniqueJoke.has(newJoke)) {\r\n          jokes.push({id:uuid() ,joke: res.data.joke, votes: 0}); \r\n        }\r\n      } \r\n      this.setState(\r\n        st => ({\r\n          loading: false,\r\n          jokes: [...st.jokes, ...jokes]\r\n      }));\r\n      window.localStorage.setItem(\"localJokes\", JSON.stringify(jokes)); \r\n    }catch(e){\r\n      alert(e)\r\n    }\r\n  }\r\n\r\n  // Handle Votes Add Or Down Votes\r\n  handleVote(id, counterVote){\r\n    this.setState(\r\n      st => ({\r\n        jokes: st.jokes.map(j => j.id === id ? {...j, votes: j.votes + counterVote} : j)\r\n      }),\r\n      () => window.localStorage.setItem(\"localJokes\", JSON.stringify(this.state.jokes))\r\n    )\r\n  }\r\n\r\n  render(){\r\n    // Get Jokes OrderBy Vote - make sort\r\n    let jokesOrderByVotes = this.state.jokes.sort((a,b) => b.votes - a.votes);\r\n    return(\r\n      <div className=\"JokeList\">\r\n        <div className=\"JokeList-sidebar\">\r\n          <div className=\"Sidebar-title\">Omar<span> Adam</span></div>\r\n          <div className=\"Sidebar-icon\"><i className=\"em em-face_with_hand_over_mouth\"></i></div>\r\n          <div className=\"Sidebar-control\">\r\n            <button disabled={this.state.loading} onClick={this.handleClick}>Get Joke</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"JokeList-content-container\">\r\n          {this.state.loading && <LoadingSpin />}\r\n \r\n          {jokesOrderByVotes.map(j => ( \r\n            <JokeRequest key={j.id} \r\n              jokeId={j.id} \r\n              jokeTitle={j.joke} \r\n              jokeVote={j.votes}\r\n              upVotes={() => this.handleVote(j.id, 1)}\r\n              downVotes={() => this.handleVote(j.id, -1)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default JokeList;\r\n","import React, { Component } from 'react';\nimport JokeList from './joke/JokeList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <JokeList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}